{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","console","log","post","id","delete","updatedObject","put","Search","handleChange","newSearch","onChange","value","Form","handleNameChange","handleNumberChange","handleClick","newName","newNumber","onClick","type","Notification","message","className","Error","errorMessage","App","useStateWithLabel","initialValue","name","useState","setValue","useDebugValue","persons","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","setErrorMessage","useEffect","getAll","personsService","then","res","data","updatePerson","updatedPerson","number","find","person","clearInputs","handleDelete","e","target","dataset","window","confirm","displayNotification","setTimeout","displayError","preventDefault","createdPerson","concat","catch","error","response","regex","RegExp","filter","match","filterPersons","map","data-id","data-name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e917f26.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  console.log(\"persons create fired\");\n  return axios.post(baseUrl, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, updatedObject) => {\n  updatedObject.id = id;\n  return axios.put(baseUrl, updatedObject);\n};\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update,\n};\n","import React, { useState, useEffect, useDebugValue } from \"react\";\nimport personsService from \"./services/persons\";\nconst App = () => {\n  const useStateWithLabel = (initialValue, name) => {\n    const [value, setValue] = useState(initialValue);\n    useDebugValue(`${name}: ${value}`);\n    return [value, setValue];\n  };\n  //States\n  const [persons, setPersons] = useStateWithLabel([], \"persons\");\n  const [newName, setNewName] = useStateWithLabel(\"\", \"newName\");\n  const [newNumber, setNewNumber] = useStateWithLabel(\"\", \"newNumber\");\n  const [newSearch, setNewSearch] = useStateWithLabel(\"\", \"search\");\n  const [message, setMessage] = useStateWithLabel(null, \"message\");\n  const [errorMessage, setErrorMessage] = useStateWithLabel(\n    null,\n    \"errorMessage\"\n  );\n  //Functions\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const getAll = () => {\n    personsService.getAll().then((res) => {\n      setPersons(res.data);\n    });\n  };\n\n  const personAlreadyExists = () => {\n    return persons.find((person) => person.name === newName);\n  };\n\n  const addNewPerson = () => {\n    personsService\n      .create({\n        name: newName,\n        number: newNumber,\n      })\n      .then((createdPerson) => {\n        setPersons(persons.concat(createdPerson.data));\n        displayNotification(`${newName} was added to phone book.`);\n      })\n      .catch((error) => {\n        //end of logging\n\n        displayError(error.response.data.message);\n      });\n  };\n\n  const findIdOfPerson = () => {\n    const foundPerson = persons.find((person) => {\n      return person.name === newName;\n    });\n    return foundPerson.id;\n  };\n\n  const updatePerson = () => {\n    const updatedPerson = { name: newName, number: newNumber };\n    const id = findIdOfPerson();\n\n    personsService.update(id, updatedPerson).then((res) => {\n      //use res object to update person in array\n      // setPersons()\n      // persons.data.name\n    });\n  };\n\n  const clearInputs = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    if (personAlreadyExists()) {\n      if (\n        window.confirm(\n          `${newName} already exists in phonebook. Replace old number with new one?`\n        )\n      ) {\n        updatePerson();\n\n        getAll();\n        clearInputs();\n      } else {\n        clearInputs();\n      }\n    } else {\n      addNewPerson();\n      clearInputs();\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setNewSearch(e.target.value);\n  };\n\n  const handleDelete = (e) => {\n    const { name, id } = e.target.dataset;\n    if (window.confirm(`Delete ${name}`)) {\n      personsService\n        .remove(id)\n        .then(() => displayNotification(`${name} was deleted`));\n\n      getAll();\n    }\n  };\n\n  const filterPersons = () => {\n    const regex = new RegExp(newSearch, \"gi\");\n\n    return persons.filter((person) => person.name.match(regex));\n  };\n\n  const displayPersons = () => {\n    return filterPersons().map((person) => (\n      <div key={person.name}>\n        {person.name} {person.number}{\" \"}\n        <button\n          onClick={handleDelete}\n          data-id={person.id}\n          data-name={person.name}\n        >\n          delete\n        </button>\n      </div>\n    ));\n  };\n\n  const displayNotification = (message) => {\n    setMessage(message);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const displayError = (errorMessage) => {\n    setErrorMessage(errorMessage);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 5000);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Error errorMessage={errorMessage} />\n      <Search handleChange={handleSearchChange} newSearch={newSearch} />\n\n      <h3>add a new</h3>\n      <Form\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleClick={handleAdd}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h3>Numbers</h3>\n      {displayPersons()}\n    </div>\n  );\n};\n\n//React Modules\n\nconst Search = ({ handleChange, newSearch }) => {\n  return (\n    <div>\n      filter shown with\n      <input onChange={handleChange} value={newSearch} />\n    </div>\n  );\n};\n\nconst Form = ({\n  handleNameChange,\n  handleNumberChange,\n  handleClick,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button onClick={handleClick} type=\"submit\">\n          add\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification\">{message}</div>;\n};\n\nconst Error = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null;\n  }\n  return <div className=\"error\">{errorMessage}</div>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}